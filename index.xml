<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>孙志奇的个人博客</title>
    <link>/</link>
    <description>Recent content on 孙志奇的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 26 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About me</title>
      <link>/about-hugo/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/about-hugo/</guid>
      <description>求职简历 个人基本信息 姓 名： 孙志奇 性 别： 男 联系方式：15235926326 E-mail：carb2914@gmail.com 学历：西安理工大学 统招本科 求职意向： python全栈开发工程师 个人网站博客地址： https://sunzhiqi123.github.io/  开发技能 前端框架：Vue.js，Element-UI，Bootstrap，jQuery，Node.js 后端框架：Django，Tornado，Flask，celery 数据库：Mysql，MongoDB，Redis 项目部署：CentOS 7.6，Nginx，Fastdfs，Docker，Jenkins，SuperVisor 爬虫方面：Requests，Scrapy，Selenium，Scrapy-redis 版本控制工具：Git，Svn 其他：Golang，Sklearn，Tensor Flow，数据分析，Siege 外语：CET-4，可流畅阅读英文文档  工作经历 2017.10-- 至今 新锐泰乐科技有限公司 Python全栈开发工程师 2015.8--2017.10 思铭博达科技科技有限公司 Python初级开发工程师  项目经验 自动化运维管理系统 项目架构: Django+Mysql+Ansible+Vue+Bootstrap 项目描述： 将互联网技术、自动化技术和信息技术相结合，实现了自动化运维工作的业务处理，配置管理， 报表分析以及日常巡检等工作，高可用、准确及时的业务处理能力突破了传统运维的瓶颈，提高 企业运维服务和系统运维效率 技术重点： ·采用MVC的设计模式，降低耦合，后端采用Django框架 ·采用Bootstrap响应式设计，适用于各个平台 ·使用Supervisor管理进程，简化服务操作，降低日常维护成本 ·使用SaltStack运维工具实现自动化部署 企业信息管理系统 项目架构：Django+Bootstrap+Mysql+SaltStack+Celery 项目描述： Django-ERP是一款面向中小型企业的信息管理系统，涵盖销售管理，采购管理、库存管理、组织 管理、工单服务等，通过本系统，可以实时监控企业的收入、成本与库存，为企业的后续开 展提供准确的数据支持。 技术重点： ·基于ABAC的权限管理设计，方便集中化管理 ·采用Bootstrap响应式设计前端框架，方便leader随时审批和管理平台 ·采用JWT来保证接口数据的安全 ·采用FastDFS分布式上传文件，文件指纹避免文件重复上传 ·celery+rabbitmq异步消息队列解决消息推送失败时重新推送 车型车系品牌管理App 项目架构: Django+Scripy-Redis+Vue+Mysql+Mongodb 项目描述： 实时更新最新的车辆信息，运用协同过滤算法推荐用户喜欢的车辆类型，通过搜索的车辆信息 实现性价对比，帮助用户更快更方便地购买汽车。 项目职责： 主要用scrapy框架定时从各大汽车网站爬取车辆信息，对数据进行清洗，实现增量式爬虫，研 究一些反爬策略。 技术难点： 1.</description>
    </item>
    
    <item>
      <title>django 简介</title>
      <link>/posts/django/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/django/</guid>
      <description>#django 简介
简介&amp;amp;安装 Django 项目是一个Python定制框架，它源自一个在线新闻 Web 站点，于 2005 年以开源的形式被释放出来。Django 框架的核心组件有：用于创建模型的对象关系映射为最终用户设计的完美管理界面一流的 URL 设计设计者友好的模板语言缓存系统。 Django(发音：[`dʒæŋɡəʊ]) 是用python语言写的开源web开发框架(open source web framework)，它鼓励快速开发,并遵循MVC设计。Django遵守BSD版权，初次发布于2005年7月, 并于2008年9月发布了第一个正式版本1.0 。Django 根据比利时的爵士音乐家Django Reinhardt命名，他是一个吉普赛人，主要以演奏吉它为主，还演奏过小提琴等。由于Django在近年来的迅速发展，应用越来越广泛，被著名IT开发杂志SD Times评选为2013 SD Times 100，位列“API、库和框架”分类第6位，被认为是该领域的佼佼者。 Django2.0中文手册
安装django pip install Django==2.0.4
查看Django当前版本 python -m django &amp;ndash;version
创建django项目 django-admin startproject proname
创建子项目 python manage.py startapp name
启动项目 pyhon manage.py runserver</description>
    </item>
    
    <item>
      <title>18个python的高效编程技巧</title>
      <link>/posts/jiqiao/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/jiqiao/</guid>
      <description>#18个python的高效编程技巧
01 交换变量
   a=3
b=6
   这个情况如果要交换变量在c++中，肯定需要一个空变量。但是python不需要，只需一行，大家看清楚了
   a,b=b,a
print(a)&amp;gt;&amp;gt;&amp;gt;6
ptint(b)&amp;gt;&amp;gt;&amp;gt;5
   02 字典推导(Dictionary comprehensions)和集合推导(Set comprehensions) 大多数的Python程序员都知道且使用过列表推导(list comprehensions)。如果你对list comprehensions概念不是很熟悉——一个list comprehension就是一个更简短、简洁的创建一个list的方法。
   some_list = [1, 2, 3, 4, 5]
another_list = [ x + 1 for x in some_list ]
another_list [2, 3, 4, 5, 6]
   自从python 3.1 起，我们可以用同样的语法来创建集合和字典表：
   Set Comprehensions some_list = [1, 2, 3, 4, 5, 2, 5, 1, 4, 8]</description>
    </item>
    
    <item>
      <title>python 二维码</title>
      <link>/posts/erweima/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/erweima/</guid>
      <description>#用python生成二维码
python中有一个好玩的库，不仅可以生成各种花色的二维码，还可以生成动态二维码。 MyQR是一个能够生成自定义二维码的第三方库，可以根据需要生成普通二维码、带图片的艺术二维码，也可以生成动态二维码 效果图如下： 首先安装MyQR库，直接用pip install myqr(or MyQR)。需要注意的是MyQR依赖于python3，在python2的环境下可能无法正常运行。 1.生成普通二维码 在程序中导入MyQR包下的模板myqr，其中word参数接收一个字符串作为二维码的内容。 from MyQR import myqr #注意大小写 myqr.run(words=&amp;quot;网址链接或者字符串，不支持中文&amp;quot;) 运行后生成一个名为“qrcode.png”的二维码图片，用微信扫一扫生成的二维码，就会自动跳转到这个地址。 2.生成带图片的二维码 myqr.run(words=&#39;https://www.cnblogs.com/Estate-47/&#39;, picture=&#39;girl.jpg&#39;,colorized=True) #图片要和代码保持同一路径 此为彩色图片代码，需要黑白图片就去掉参数colorized=True。另外注意把图片和代码放在同一路径中，否则会报错找不到图片 from MyQR import myqr myqr.run( words=&#39;网址链接或者字符串，不支持中文&#39;, # 扫描二维码后，显示的内容，或是跳转的链接 version=5, # 设置容错率 level=&#39;H&#39;, # 控制纠错水平，范围是L、M、Q、H，从左到右依次升高 picture=&#39;7cf0bfb0bb10ea94d19455a13f62a05.png&#39;, # 图片所在目录，可以是动图 colorized=True, # 黑白(False)还是彩色(True) contrast=1.0, # 用以调节图片的对比度，1.0 表示原始图片。默认为1.0。 brightness=1.0, # 用来调节图片的亮度，用法同上。 save_name=&#39;7cfaa.png&#39;, # 控制输出文件名，格式可以是 .jpg， .png ，.bmp ，.gif ) 3.生成动态二维码 可以直接在命令中使用myqr指令生成需要的二维码 myqr &#39;https://www.cnblogs.com/Estate-47/&#39; -p QX.gif -c myqr.run(words=&#39;https://www.cnblogs.com/Estate-47/&#39;, 5 picture=&#39;QX.gif&#39;,colorized=True)  </description>
    </item>
    
    <item>
      <title>vue样式的动态绑定</title>
      <link>/posts/vue6/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/vue6/</guid>
      <description>vue样式的动态绑定 true显示样式，flase不显示
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;vue的样式绑定&amp;lt;/title&amp;gt; &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt; .active{ background-color: gold; color:blue; } &amp;lt;/style&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;./js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; window.onload = function(){ var app = new Vue({ el:&amp;quot;#a&amp;quot;, data:{ //激活 false isactive:true } }); } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;a&amp;quot;&amp;gt;人生最棒的是不后悔 &amp;lt;div v-bind:class=&amp;quot;{ active:isactive }&amp;quot; style=&amp;quot;width: 200px&amp;quot;&amp;gt; 人生最难的是不留遗憾 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
    <item>
      <title>vue表单选项框</title>
      <link>/posts/vue5/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/vue5/</guid>
      <description>#vue表单选项框 选项框选的内容在下面显示
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; &amp;lt;title&amp;gt;vue表单的学习&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;quot;./js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; //单一入口 window.onload = function(){ var app = new Vue({ el:&amp;quot;#a&amp;quot;, data:{ message:&#39;你好&#39; } }); // 多选框的增删改查 var app = new Vue({ el:&amp;quot;#b&amp;quot;, data:{ checknames:[] } }); // 单选框 var app = new Vue({ el:&amp;quot;#c&amp;quot;, data:{ picked:&amp;quot;&amp;quot;,gender:&amp;quot;男&amp;quot; } }); } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id = &amp;quot;a&amp;quot;&amp;gt; &amp;lt;!-- 双向绑定用 v-model绑定 --&amp;gt; &amp;lt;input type=&#39;text&#39; v-model=&#39;message&#39;/&amp;gt; 设置的变量内容是: {{message}} &amp;lt;!</description>
    </item>
    
    <item>
      <title>vue简单逻辑判断</title>
      <link>/posts/vue4/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/vue4/</guid>
      <description>#vue简单逻辑判断 条件判断能否显示
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;vue的逻辑判断学习&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;./js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; window.onload= function(){ var app = new Vue({ el:&amp;quot;#a&amp;quot;, data:{ //能否显示 seen:true, seen1:false } }); } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;a&amp;quot;&amp;gt; &amp;lt;!-- 使用vue的判断标签来显示或者隐藏元素 --&amp;gt; &amp;lt;p v-if=&amp;quot;seen&amp;quot;&amp;gt;你能看见我&amp;lt;/p&amp;gt; &amp;lt;span v-if=&amp;quot;seen1&amp;quot;&amp;gt;你不能看见我&amp;lt;/span&amp;gt; &amp;lt;!-- 判断 if else 随机出现--&amp;gt; &amp;lt;div v-if=&amp;quot;Math.random() &amp;gt; 0.5&amp;quot;&amp;gt; 现在你能看见我 &amp;lt;/div&amp;gt; &amp;lt;div v-else&amp;gt; 你现在看不见我 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
    <item>
      <title>vue的选项卡功能</title>
      <link>/posts/vue3/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/vue3/</guid>
      <description>#vue的选项卡功能 选项卡：点击不同的按钮会显示不同的内容
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; &amp;lt;title&amp;gt;vue选项卡学习&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; .box{ border:1px solid blueviolet; height: 228px; width: 323px; background-color: bisque; } &amp;lt;/style&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;./js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; window.onload= function(){ var app = new Vue({ el:&amp;quot;#app&amp;quot;, data:{ tabId:0 } }); } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt; &amp;lt;!-- tab 选项 --&amp;gt; &amp;lt;div class=&amp;quot;tab&amp;quot;&amp;gt; &amp;lt;!-- 制作选项卡头部的网页 click单击--&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot; @click=&amp;quot;tabId=0&amp;quot; class=&amp;quot;{tabId=0}&amp;quot;&amp;gt; &amp;lt;!-- button 按钮 --&amp;gt; &amp;lt;button style=&amp;quot;background-color:blueviolet&amp;quot;&amp;gt; mysql&amp;lt;/button&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot; @click=&amp;quot;tabId=1&amp;quot; class=&amp;quot;{tabId=1}&amp;quot;&amp;gt; &amp;lt;button style=&amp;quot;background-color:palevioletred&amp;quot;&amp;gt;jquery&amp;lt;/button&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot; @click=&amp;quot;tabId=2&amp;quot; class=&amp;quot;{tabId=2}&amp;quot;&amp;gt; &amp;lt;button style=&amp;quot;background-color:aqua&amp;quot;&amp;gt;vue.</description>
    </item>
    
    <item>
      <title>vue简单的监听属性</title>
      <link>/posts/vue2/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/vue2/</guid>
      <description>##简单vue的监听属性(单位换算) 单位换算
单位换算可以根据实际情况换
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;vue.js的监听属性&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&#39;./js/vue.js&#39;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; window.onload = function(){ //建立vue对象 var app = new Vue({ el:&amp;quot;#a&amp;quot;, data:{ kilometers:0, meters:0, decimetre:0 }, //监听属性开始 watch:{ kilometers:function(val){ this.kilometers = val; this.decimetre = val * 10000; this.meters = val * 1000; }, meters:function(val){ this.kilometers = val / 1000; this.decimetre = val * 10; this.meters=val; }, decimetre:function(val){ this.kilometers = val /10000; this.meters = val / 10; this.</description>
    </item>
    
    <item>
      <title>vue简单的计算属性</title>
      <link>/posts/vue1/</link>
      <pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/vue1/</guid>
      <description>###简单的Vue计算属性 倒转字符串
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;vue.js的计算属性&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;./js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; window.onload = function(){ //建立vue对象 var app = new Vue({ el:&amp;quot;#a&amp;quot;, data:{ message : &amp;quot;你好吗&amp;quot; }, computed:{ reverseMessage:function(){ return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;) } } }); var a = new Vue({ el:&amp;quot;#q&amp;quot;, data:{ message:&amp;quot;你是谁&amp;quot; } }); } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;a&amp;quot;&amp;gt; &amp;lt;!-- 颠倒字符串 --&amp;gt; {{ message }}&amp;lt;br/&amp;gt; {{ reverseMessage }} &amp;lt;/div&amp;gt; &amp;lt;div id=&amp;quot;q&amp;quot;&amp;gt; {{message.split(&#39;&#39;).reverse(&#39;&#39;).join(&#39;&#39;)}} &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
  </channel>
</rss>